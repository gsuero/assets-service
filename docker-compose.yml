version: '3.7'
services:
  assets-service:
    container_name: assets-service
    depends_on:
      - postgres
      - rabbitmq
    build:
      context: .
    image: assets-service-image:latest
    environment:
      - spring_profiles_active=local
      - DATABASE_HOST=postgres
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=postgres
      - RABBITMQ_USER=john123
      - RABBITMQ_PASSWORD=123456
      - RABBITMQ_HOST=rabbitmq
    ports:
      - '8080:8080'
    networks:
      - spring-cloud-network
  postgres:
    container_name: postgres
    image: postgres:10.5
    restart: always
    expose:
      - "5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5432:5432'
    volumes:
      # copy the sql script to create and fill tables
      - ./local/sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./local/sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    networks:
      - spring-cloud-network
  rabbitmq:
    image: "rabbitmq:3.9-alpine"
    ports:
      - '5672:5672'
      - "15672:15672"
    volumes:
      - ./local/rabbitmq/rabbitmq-enabled-plugins:/etc/rabbitmq/enabled_plugins
      - ./local/rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config
      - ./local/rabbitmq/rabbitmq-defs.json:/etc/rabbitmq/rabbitmq-defs.json
    networks:
      - spring-cloud-network
networks:
  spring-cloud-network:
    driver: bridge